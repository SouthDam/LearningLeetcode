class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> Hmap;
        vector<int> re;
        for(int i = 0; i<nums.size();i++){
            Hmap[nums[i]]=i;
        }
        for(int i = 0;i<nums.size();i++){
            int TheOther = target-nums[i];
            if(Hmap.count(TheOther) && Hmap[TheOther]!=i){
                re.push_back(i);
                re.push_back(Hmap[TheOther]);
                break;
            }
        }
        return re;
    }
};

/*
Two-pass Hash map solution. Time complexity O(n), space complexity O(1). Faster than brute force solution,
but slower than one-pass hash map solution. Use most memory in these three solutions.
*/
